<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, height=device-height, viewport-fit=cover">
    <title>채팅방</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
        }

        body {
            background-color: #f8fafc;
            height: 100%;
            min-height: 100vh;
            min-height: -webkit-fill-available;
            display: flex;
            flex-direction: column;
            position: relative;
        }

        html {
            height: -webkit-fill-available;
        }

        .chat-header {
            background-color: white;
            padding: 16px;
            color: #1a1a1a;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }

        .chat-container {
            flex: 1;
            padding: 20px;
            margin: 64px 0 80px 0;
            overflow-y: auto;
            position: fixed;
            top: 0;
            bottom: 80px;
            left: 0;
            right: 0;
        }

        .chat-input-container {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background-color: white;
            padding: 16px;
            border-top: 1px solid rgba(49, 130, 246, 0.1);
            display: flex;
            gap: 12px;
            z-index: 1000;
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }

        .back-button {
            color: #3182f6;
            text-decoration: none;
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 12px;
            transition: all 0.2s ease;
            background-color: rgba(49, 130, 246, 0.1);
        }

        .back-button:hover {
            background-color: rgba(49, 130, 246, 0.15);
            transform: translateX(-2px);
        }

        .back-button svg {
            width: 20px;
            height: 20px;
        }

        .room-title {
            font-size: 16px;
            font-weight: 600;
            color: #1a1a1a;
            letter-spacing: -0.5px;
        }

        .message {
            display: flex;
            flex-direction: column;
            margin-bottom: 24px;
            animation: fadeIn 0.3s ease-out forwards;
        }

        .message.received {
            align-items: flex-start;
        }

        .message.sent {
            align-items: flex-end;
        }

        .message-sender {
            font-size: 13px;
            color: #64748b;
            margin-bottom: 6px;
            padding-left: 12px;
            font-weight: 500;
        }

        .message-content {
            max-width: 70%;
            padding: 12px 16px;
            border-radius: 16px;
            font-size: 14px;
            margin-bottom: 4px;
            word-break: break-all;
            line-height: 1.5;
            transition: transform 0.2s ease;
        }

        .message.received .message-content {
            background-color: white;
            color: #1a1a1a;
            border: 1px solid rgba(49, 130, 246, 0.1);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.02);
            border-top-left-radius: 4px;
        }

        .message.sent .message-content {
            background-color: #3182f6;
            color: white;
            border-top-right-radius: 4px;
            box-shadow: 0 2px 4px rgba(49, 130, 246, 0.15);
        }

        .message:hover .message-content {
            transform: translateY(-1px);
        }

        .message-time {
            font-size: 11px;
            color: #94a3b8;
            margin: 0 6px;
        }

        .chat-input {
            flex: 1;
            padding: 12px 16px;
            border: 2px solid #eef0f3;
            border-radius: 16px;
            font-size: 14px;
            outline: none;
            transition: all 0.2s ease;
            background-color: white;
        }

        .chat-input:focus {
            border-color: #3182f6;
            box-shadow: 0 0 0 4px rgba(49, 130, 246, 0.1);
        }

        .send-button, .attach-button {
            background-color: #3182f6;
            color: white;
            border: none;
            border-radius: 14px;
            width: 42px;
            height: 42px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s ease;
            box-shadow: 0 2px 4px rgba(49, 130, 246, 0.1);
        }

        .attach-button {
            background-color: rgba(49, 130, 246, 0.1);
            color: #3182f6;
        }

        .send-button:hover, .attach-button:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(49, 130, 246, 0.15);
        }

        .attach-button:hover {
            background-color: rgba(49, 130, 246, 0.15);
        }

        .attach-button svg {
            width: 20px;
            height: 20px;
        }

        .date-divider {
            text-align: center;
            margin: 32px 0;
            position: relative;
        }

        .date-divider::before {
            content: '';
            position: absolute;
            left: 0;
            top: 50%;
            width: 100%;
            height: 1px;
            background-color: rgba(49, 130, 246, 0.1);
            z-index: 1;
        }

        .date-text {
            background-color: #f8fafc;
            padding: 0 16px;
            color: #64748b;
            font-size: 12px;
            position: relative;
            z-index: 2;
            font-weight: 500;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @media (max-width: 768px) {
            .message-content {
                max-width: 85%;
            }
        }




    .dropdown {
            position: relative;
            width: 40px;
            height: 40px;
        }

        .dropdown-button {
            width: 40px;
            height: 40px;
            background-color: #f1f5f9;
            border: none;
            border-radius: 50%;
            color: #64748b;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
        }

        .dropdown-button:hover {
            background-color: #e2e8f0;
            color: #3182f6;
            transform: translateY(-1px);
        }

        .dropdown-button svg {
            width: 18px;
            height: 18px;
            stroke-width: 2.5;
        }

        .dropdown-content {
            position: absolute;
            top: 54px;
            right: -8px;
            background-color: white;
            min-width: 210px;
            border-radius: 16px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            padding: 8px;
            display: none;
            backdrop-filter: blur(10px);
            transform-origin: top right;
            animation: dropdownFadeIn 0.2s ease-out forwards;
        }

        @keyframes dropdownFadeIn {
            from {
                opacity: 0;
                transform: scale(0.95);
            }
            to {
                opacity: 1;
                transform: scale(1);
            }
        }

        .dropdown-content::before {
            content: '';
            position: absolute;
            top: -6px;
            right: 20px;
            width: 12px;
            height: 12px;
            background-color: white;
            transform: rotate(45deg);
            border-radius: 2px;
        }

        .dropdown-content.show {
            display: block;
        }

        .dropdown-item {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 12px 16px;
            color: #334155;
            font-size: 14px;
            font-weight: 500;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.15s ease;
            margin: 2px 0;
        }

        .dropdown-item:hover {
            background-color: #f8fafc;
            color: #3182f6;
        }

        .dropdown-item:hover svg {
            color: #3182f6;
            transform: scale(1.1);
        }

        .dropdown-item svg {
            width: 18px;
            height: 18px;
            color: #64748b;
            transition: all 0.2s ease;
        }

        /* 모던한 토글 스위치 스타일 */
        .toggle-switch {
            margin-left: auto;
            width: 36px;
            height: 20px;
            background-color: #e2e8f0;
            border-radius: 20px;
            padding: 2px;
            transition: all 0.2s ease;
            cursor: pointer;
            position: relative;
        }

        .toggle-switch::before {
            content: '';
            position: absolute;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            background-color: white;
            transition: all 0.2s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            left: 2px;
        }

        .toggle-switch.active {
            background-color: #3182f6;
        }

        .toggle-switch.active::before {
            transform: translateX(16px);
        }

        .message-content img {
            width: 200px;
            height: 200px;
            object-fit: cover;
            border-radius: 12px;
            cursor: zoom-in;
            transition: transform 0.3s ease;
        }

        @media (max-width: 768px) {
            .message-content img {
                width: 150px;
                height: 150px;
            }
        }

        .fullscreen-image {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.9);
            z-index: 2000;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .fullscreen-image img {
            max-width: 90%;
            max-height: 90%;
            width: auto;
            height: auto;
            object-fit: contain;
        }

        .nickname-input {
            transition: all 0.2s ease;
        }

        .nickname-input:focus {
            border-color: #3182f6;
            outline: none;
            box-shadow: 0 0 0 3px rgba(49, 130, 246, 0.1);
        }

        .nickname-submit:hover {
            background: #2563eb;
        }

        .nickname-submit:active {
            transform: translateY(1px);
        }

        .nickname-input-container {
            animation: fadeIn 0.2s ease-out forwards;
        }

    </style>

</head>
<body>
<header class="chat-header">
    <a href="/main" class="back-button">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
            <path d="M19 12H5M12 19l-7-7 7-7"/>
        </svg>
    </a>
    <div class="room-title">주제 : "{{chat.title}}"</div>
    <div class="dropdown">
        <button class="dropdown-button">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="12" cy="12" r="1"/>
                <circle cx="12" cy="5" r="1"/>
                <circle cx="12" cy="19" r="1"/>
            </svg>
        </button>
        <div class="dropdown-content">
            <div class="dropdown-item">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"/>
                    <polyline points="16 6 12 2 8 6"/>
                    <line x1="12" y1="2" x2="12" y2="15"/>
                </svg>
                채팅방 공유하기
            </div>
            <div class="dropdown-item">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <rect x="3" y="11" width="18" height="11" rx="2" ry="2"/>
                    <path d="M7 11V7a5 5 0 0 1 10 0v4"/>
                </svg>
                메시지 암호화
                <div class="toggle-switch"></div>
            </div>

            <div class="dropdown-item nickname-change">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
                    <circle cx="12" cy="7" r="4"/>
                </svg>
                닉네임 변경
            </div>
            <div class="nickname-input-container" style="display: none; padding: 8px 16px;">
                <input type="text" class="nickname-input" placeholder="새 닉네임" style="width: 100%; padding: 8px; border: 1px solid #e2e8f0; border-radius: 8px; margin-bottom: 8px;">
                <button class="nickname-submit" style="width: 100%; padding: 8px; background: #3182f6; color: white; border: none; border-radius: 8px; cursor: pointer;">변경하기</button>
            </div>


        </div>
    </div>
</header>


<div class="chat-container">
    {{#chatinfo}}
        {{#filePath}}
            <div class="message {{messageType}}">
                <div class="message-sender">{{writer}}</div>
                <div class="message-content">
                    <img src="{{filePath}}" alt="uploaded image">
                </div>
                <div class="message-time">{{date}}</div>
            </div>
        {{/filePath}}
        {{^filePath}}
            <div class="message {{messageType}}">
                <div class="message-sender">{{writer}}</div>
                <div class="message-content">{{message}}</div>
                <div class="message-time">{{date}}</div>
            </div>
        {{/filePath}}
    {{/chatinfo}}
</div>

<div class="chat-input-container">
    <form action="/chatMessageSend" method="post" style="display: flex; flex: 1; gap: 12px;" enctype="multipart/form-data">
        <input type="file" id="fileInput" name="image" accept="image/*" style="display: none;">
        <label for="fileInput" class="attach-button">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7"/>
                <path d="M9 11V9a2 2 0 0 1 2-2h2m4.5-4L19 4.5"/>
                <path d="M15 8h6v6"/>
            </svg>
        </label>
        <input type="text" class="chat-input" placeholder="메시지를 입력하세요" autocomplete="off" name="message">
        <input type="hidden" name="chatRoomId" value="{{chat.id}}">
        <button type="submit" class="send-button">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M5 12h14M12 5l7 7-7 7"/>
            </svg>
        </button>
    </form>
</div>

<script>
    const chatContainer = document.querySelector('.chat-container');
    const dropdownButton = document.querySelector('.dropdown-button');
    const dropdownContent = document.querySelector('.dropdown-content');
    const toggleSwitch = document.querySelector('.toggle-switch');
    const baseUrl = window.location.protocol + '//' + window.location.host;

    const nicknameChange = document.querySelector('.nickname-change');
    const nicknameInputContainer = document.querySelector('.nickname-input-container');
    const nicknameInput = document.querySelector('.nickname-input');
    const nicknameSubmit = document.querySelector('.nickname-submit');


    nicknameChange.addEventListener('click', () => {
        nicknameInputContainer.style.display = nicknameInputContainer.style.display === 'none' ? 'block' : 'none';
    });
    nicknameSubmit.addEventListener('click', () => {
    const newNickname = nicknameInput.value.trim();
        if(newNickname) {
            fetch(`/sessonNicknameChange/${newNickname}`)
                .then(() => {
                    alert('닉네임이 변경되었습니다.');
                    nicknameInputContainer.style.display = 'none';
                    nicknameInput.value = '';
                    dropdownContent.classList.remove('show');
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('닉네임 변경에 실패했습니다.');
                });
        } else {
            alert('닉네임을 입력해주세요.');
        }
    });


    chatContainer.addEventListener('click', (e) => {
    const img = e.target;
        if (img.tagName === 'IMG') {
            const fullscreenDiv = document.createElement('div');
            fullscreenDiv.className = 'fullscreen-image';
            const fullscreenImg = document.createElement('img');
            fullscreenImg.src = img.src;
            fullscreenDiv.appendChild(fullscreenImg);
            document.body.appendChild(fullscreenDiv);

            fullscreenDiv.addEventListener('click', () => {
                fullscreenDiv.remove();
            });
        }
    });


    dropdownButton.addEventListener('click', (e) => {
        e.stopPropagation();
        dropdownContent.classList.toggle('show');
    });

    document.getElementById('fileInput').addEventListener('change', function(e) {
            const fileName = e.target.files[0]?.name;
            if (fileName) {
                document.querySelector('.chat-input').value = fileName;
            }
        });

    document.addEventListener('click', (e) => {
        if (!dropdownContent.contains(e.target) && !dropdownButton.contains(e.target)) {
            dropdownContent.classList.remove('show');
        }
    });

    toggleSwitch.addEventListener('click', () => {
        toggleSwitch.classList.toggle('active');
    });

    // URL 복사 기능
    const shareButton = document.querySelector('.dropdown-item:first-child');
    shareButton.addEventListener('click', () => {
        const tempInput = document.createElement('input');
        tempInput.value = baseUrl + '/guestChat/{{chat.id}}/{{chat.password}}';
        document.body.appendChild(tempInput);
        tempInput.select();

        try {
            document.execCommand('copy');
            alert('URL이 복사되었습니다!');
        } catch (err) {
            console.error('URL 복사 실패:', err);
            alert('URL 복사에 실패했습니다.');
        }

        document.body.removeChild(tempInput);
        dropdownContent.classList.remove('show');
    });


    function updateChat() {
        fetch('/messageFindLast')
            .then(response => response.json())
            .then(msg => {
                if (msg !== null) {
                    if (msg.filePath) {
                        chatContainer.insertAdjacentHTML('beforeend', `
                        <div class="message ${msg.messageType}">
                        <div class="message-sender">${msg.writer}</div>
                        <div class="message-content">
                            <img src="${msg.filePath}" alt="uploaded image">
                        </div>
                            <div class="message-time">${msg.date}</div>
                        </div>
                        `);
                        chatContainer.scrollTop = chatContainer.scrollHeight;
                    } else {
                        chatContainer.insertAdjacentHTML('beforeend', `
                        <div class="message ${msg.messageType}">
                            <div class="message-sender">${msg.writer}</div>
                            <div class="message-content">${msg.message}</div>
                            <div class="message-time">${msg.date}</div>
                        </div>
                    `);
                        chatContainer.scrollTop = chatContainer.scrollHeight;
                    }

                }
            });
    }

    setInterval(updateChat, 500);

    history.pushState(null, null, location.href);
    window.onpopstate = function () {
        history.go(1);
    };

    document.addEventListener('DOMContentLoaded', () => {
        document.querySelector('.chat-input').focus();
        if (chatContainer) {
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }
    });

    document.querySelector('.send-button').addEventListener('click', sendMessage);

    document.querySelector('.chat-input').addEventListener('keypress', function (e) {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });
</script>
</body>
</html>