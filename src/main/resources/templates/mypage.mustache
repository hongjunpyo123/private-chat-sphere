<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>마이페이지</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
        }

        body {
            background-color: #f8fafc;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .container {
            padding: 20px;
            max-width: 480px;
            margin: 0 auto;
            width: 100%;
            flex: 1;
            margin-bottom: 80px;
            animation: fadeIn 0.8s ease-out forwards;
        }

        .header {
            text-align: left;
            margin-bottom: 24px;
            padding: 24px;
            background-color: white;
            border-radius: 20px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            position: relative;
            overflow: hidden;
        }

        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background-color: #3182f6;
        }

        .header .greeting {
            font-size: 15px;
            color: #64748b;
            margin-bottom: 4px;
            font-weight: 500;
        }

        .header .username {
            font-size: 22px;
            font-weight: 600;
            color: #1e293b;
            letter-spacing: -0.5px;
        }

        .profile-section {
            background-color: white;
            border-radius: 20px;
            padding: 24px;
            margin-bottom: 16px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .profile-title {
            font-size: 18px;
            font-weight: 600;
            color: #1e293b;
            margin-bottom: 20px;
            letter-spacing: -0.5px;
        }

        .profile-info {
            margin-bottom: 24px;
        }

        .info-item {
            margin-bottom: 20px;
            padding: 16px;
            background-color: #f8fafc;
            border-radius: 12px;
            transition: all 0.2s ease;
            border: 1px solid rgba(49, 130, 246, 0.1);
        }

        .info-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }

        .info-label {
            font-size: 13px;
            color: #64748b;
            margin-bottom: 8px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .info-label::before {
            content: '';
            display: block;
            width: 4px;
            height: 4px;
            background-color: #3182f6;
            border-radius: 50%;
        }

        .info-value {
            font-size: 15px;
            color: #1e293b;
            font-weight: 500;
            letter-spacing: -0.3px;
            word-break: break-all;
        }

        .key-controls {
            display: flex;
            align-items: center;
            margin-top: 10px;
        }

        .key-checkbox {
            margin-right: 10px;
        }

        .key-button {
            padding: 6px 12px;
            background-color: #3182f6;
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 12px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .key-button:disabled {
            background-color: #94a3b8;
            cursor: not-allowed;
        }

        .key-button:hover:not(:disabled) {
            background-color: #1c6feb;
        }

        .key-button-refresh {
            margin-left: 5px;
            background-color: #10b981;
        }

        .key-button-refresh:hover:not(:disabled) {
            background-color: #059669;
        }

        .encryption-key-input,
        .decryption-key-input {
            width: 100%;
            padding: 8px;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
            font-size: 14px;
            margin-top: 8px;
        }

        .encryption-key-input:disabled,
        .decryption-key-input:disabled {
            background-color: #f1f5f9;
            color: #94a3b8;
        }

        .button-group {
            margin-top: 32px;
        }

        .button {
            width: 100%;
            padding: 14px;
            border: none;
            border-radius: 12px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .button-primary {
            background-color: #3182f6;
            color: white;
            margin-bottom: 12px;
        }

        .button-primary:hover {
            background-color: #1c6feb;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(49, 130, 246, 0.2);
        }

        .button-danger {
            background-color: transparent;
            color: #94a3b8;
            font-size: 13px;
            padding: 8px;
        }

        .button-danger:hover {
            color: #dc2626;
            background-color: #fef2f2;
        }

         .bottom-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            background-color: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-top: 1px solid rgba(49, 130, 246, 0.1);
            display: flex;
            justify-content: space-around;
            padding: 8px 0;
            box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.03);
        }

        .bottom-nav a {
            color: #666666;
            text-decoration: none;
            font-size: 14px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .bottom-nav a:hover {
            color: #3182f6;
        }

        .bottom-nav .icon {
            display: inline-block;
            width: 24px;
            height: 24px;
        }

        .icon-home {
            background: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="%2364748b" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round"><path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path><polyline points="9 22 9 12 15 12 15 22"></polyline></svg>') no-repeat center;
            background-size: contain;
        }

        .icon-user {
            background: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="%2364748b" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>') no-repeat center;
            background-size: contain;
        }

        .bottom-nav a:hover .icon-home {
            background: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="%233182f6" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round"><path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path><polyline points="9 22 9 12 15 12 15 22"></polyline></svg>') no-repeat center;
            background-size: contain;
        }

        .bottom-nav a:hover .icon-user {
            background: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="%233182f6" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>') no-repeat center;
            background-size: contain;
        }
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
<div class="container">
    <header class="header">
        <div class="greeting">안녕하세요,</div>
        <div class="username">{{loginuser}}님</div>
    </header>

    <div class="profile-section">
        <h2 class="profile-title">내 정보</h2>
        <div class="profile-info">
            <div class="info-item">
                <div class="info-label">아이디</div>
                <div class="info-value">{{loginuser}}</div>
            </div>
            <div class="info-item">
                <div class="info-label">비밀번호</div>
                <div class="info-value">••••••••</div>
            </div>
            <div class="info-item">
                <div class="info-label">내 암호화 키</div>
                <input type="text" id="encryption-key-input" class="encryption-key-input" placeholder="암호화 키를 입력하세요" disabled>
                <div class="key-controls">
                    <label class="key-checkbox">
                        <input type="checkbox" id="use-encryption-key"> 수정
                    </label>
                    <button id="confirm-encryption-key" class="key-button" disabled>확인</button>
                    <button id="refresh-encryption-key" class="key-button key-button-refresh" disabled>생성</button>
                </div>
            </div>
            <div class="info-item">
                <div class="info-label">내 복호화 키</div>
                <input type="text" id="decryption-key-input" class="decryption-key-input" placeholder="복호화 키를 입력하세요" disabled>
                <div class="key-controls">
                    <label class="key-checkbox">
                        <input type="checkbox" id="use-decryption-key"> 수정
                    </label>
                    <button id="confirm-decryption-key" class="key-button" disabled>확인</button>
                </div>
            </div>
        </div>
        <div class="button-group">
            <form action="/login.html" method="get">
                <button type="submit" class="button button-primary">로그아웃</button>
            </form>
            <form action="/DeleteAccount" method="get" onsubmit="return confirm('정말 탈퇴하시겠습니까?');">
                <button type="submit" class="button button-danger">계정 삭제</button>
            </form>
        </div>
    </div>
</div>

<nav class="bottom-nav">
    <a href="/main">
        <span class="icon icon-home"></span>
        <span class="nav-text"></span>
    </a>
    <a href="/mypage">
        <span class="icon icon-user"></span>
        <span class="nav-text"></span>
    </a>
</nav>

<script>
    history.pushState(null, null, location.href);
    window.onpopstate = function () {
        history.go(1);
    };
</script>

<script type="module">
    import { encrypt, decrypt, generateKey } from '/E2EEmodule.js';

    document.addEventListener('DOMContentLoaded', async () => {
        // 이미 저장된 키가 있는지 확인
        let storedEncryptionKey = localStorage.getItem('encryptionKey');
        let storedDecryptionKey = localStorage.getItem('decryptionKey');
        let keyInfo;

        // 암호화 키 입력 필드
        const encryptionKeyInput = document.getElementById('encryption-key-input');
        // 복호화 키 입력 필드
        const decryptionKeyInput = document.getElementById('decryption-key-input');

        if (!storedEncryptionKey) {
            // 키가 없으면 새로 생성
            keyInfo = generateKey();
            storedEncryptionKey = keyInfo.base64Key;
        } else {
            keyInfo = { base64Key: storedEncryptionKey };
        }

        // 암호화 키 정보 표시
        if (encryptionKeyInput && storedEncryptionKey) {
            encryptionKeyInput.value = storedEncryptionKey;
        }

        // 복호화 키 정보 표시
        if (decryptionKeyInput && storedDecryptionKey) {
            decryptionKeyInput.value = storedDecryptionKey;
        }

        // 체크박스 및 버튼 이벤트 리스너 설정
        const useEncryptionKeyCheckbox = document.getElementById('use-encryption-key');
        const confirmEncryptionKeyButton = document.getElementById('confirm-encryption-key');
        const refreshEncryptionKeyButton = document.getElementById('refresh-encryption-key');
        const useDecryptionKeyCheckbox = document.getElementById('use-decryption-key');
        const confirmDecryptionKeyButton = document.getElementById('confirm-decryption-key');

        // 암호화 키 체크박스 이벤트
        useEncryptionKeyCheckbox.addEventListener('change', function() {
            encryptionKeyInput.disabled = !this.checked;
            confirmEncryptionKeyButton.disabled = !this.checked;
            refreshEncryptionKeyButton.disabled = !this.checked;
        });

        // 복호화 키 체크박스 이벤트
        useDecryptionKeyCheckbox.addEventListener('change', function() {
            decryptionKeyInput.disabled = !this.checked;
            confirmDecryptionKeyButton.disabled = !this.checked;
        });

        // 암호화 키 확인 버튼 이벤트
        confirmEncryptionKeyButton.addEventListener('click', function() {
            const encryptionKey = encryptionKeyInput.value.trim();
            if (encryptionKey) {
                localStorage.setItem('encryptionKey', encryptionKey);

                // 복호화 키도 함께 저장
                localStorage.setItem('decryptionKey', encryptionKey);
                decryptionKeyInput.value = encryptionKey;

                alert('암호화 키와 복호화 키가 저장되었습니다.');
            } else {
                alert('암호화 키를 입력해주세요.');
            }
        });

        // 암호화 키 갱신 버튼 이벤트
        refreshEncryptionKeyButton.addEventListener('click', function() {
            const newKeyInfo = generateKey();
            const newKey = newKeyInfo.base64Key;

            // 암호화 키와 복호화 키 모두 업데이트
            encryptionKeyInput.value = newKey;
            decryptionKeyInput.value = newKey;

            alert('새로운 키가 생성되었습니다. 확인 버튼을 눌러 저장하세요.');
        });

        // 복호화 키 확인 버튼 이벤트
        confirmDecryptionKeyButton.addEventListener('click', function() {
            const decryptionKey = decryptionKeyInput.value.trim();
            if (decryptionKey) {
                localStorage.setItem('decryptionKey', decryptionKey);
                alert('복호화 키가 저장되었습니다.');
            } else {
                alert('복호화 키를 입력해주세요.');
            }
        });
    });
</script>
</body>
</html>